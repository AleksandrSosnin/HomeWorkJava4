# Фруктовая коробка
## Шаг 1: Создание интерфейса Weighable

**Цель:** Определить интерфейс для объектов, имеющих вес.

**Действия:**
1. Создание интерфейса `Weighable`.
2. Добавление метода `getWeight()` для получения веса объекта.

## Шаг 2: Определение базового класса Fruit

**Цель:** Создать базовый класс для представления фрукта.

**Действия:**
1. Создание класса `Fruit`.

## Шаг 3: Создание классов Apple и Orange

**Цель:** Реализовать классы для представления яблок и апельсинов.

**Действия:**
1. Создание класса `Apple` наследующегося от `Fruit` и реализующего `Weighable`.
2. Создание класса `Orange` наследующегося от `Fruit` и реализующего `Weighable`.
3. Реализация метода `getWeight()` для каждого класса.

## Шаг 4: Создание класса Box

**Цель:** Разработать класс для представления коробки с фруктами.

**Действия:**
1. Создание класса `Box` с обобщением для хранения фруктов, реализующих `Weighable`.
2. Добавление списка `fruits` для хранения фруктов.
3. Реализация методов:
   - `addFruit(T fruit)` для добавления фрукта в коробку.
   - `getWeight()` для получения веса коробки.
   - `compare(Box<?> anotherBox)` для сравнения веса с другой коробкой.
   - `transferFruitsTo(Box<T> anotherBox)` для пересыпки фруктов в другую коробку.

## Шаг 5: Создание класса Program

**Цель:** Написать точку входа и протестировать функциональность созданных классов.

**Действия:**
1. Создание класса `Program` с методом `main`.
2. Создание экземпляров коробок, добавление фруктов и тестирование методов.
